{
  "swagger": "2.0",
  "info": {
    "title": "Support Ticket System API",
    "version": "1.0.0",
    "description": "API documentation for the support ticket system"
  },
  "host": "localhost:5000",
  "schemes": ["http"],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "description": "Register a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "description": "Login a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/tickets": {
      "post": {
        "tags": ["Tickets"],
        "description": "Create a new ticket",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ticket"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Ticket created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "tags": ["Tickets"],
        "description": "Get all tickets",
        "responses": {
          "200": {
            "description": "Tickets retrieved successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/tickets/{id}": {
      "put": {
        "tags": ["Tickets"],
        "description": "Update a ticket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ticket"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket updated successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": ["Tickets"],
        "description": "Delete a ticket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket deleted successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": ["customer", "support", "admin"]
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Ticket": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["open", "in-progress", "closed"]
        },
        "assignedTo": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        }
      }
    }
  }
}
